@import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@500;700&display=swap');

:root {
  --cornflower-blue: 252 94% 67%;
  --heliotrope: 252 100% 73%;
  --mirage: 233 31% 17%;
  --ebony-clay: 233 30% 21%;
  --selago: 231, 77%, 93%;
  --bali-hai: 231 20% 61%;
  --ship-cove: 231 37% 63%;
  --vulcan: 228 29% 7%;
  --burnt-siena: 0 80% 63%;
  --mona-lisa: 0 100% 80%;
  --whisper: 240 27% 98%;
  --midnight-sapphire: 233 30% 11%;
  --shamrock: 160 67% 52%;
  --pizazz: 34 100% 50%;
  --oxford-blue: 231 20% 27%;
  --white: 0 0% 100%;
  --frosty-pearl: 228, 71%, 99%;
  --midnight-indigo: 232 38% 45% / 0.251;

  --ff-primary: 'League Spartan', sans-serif;

  --fs-400: 2.25rem;
  --fs-300: 1.5rem;
  --fs-200: 0.9375rem;
  --fs-100: 0.8125rem;

  --fw-semi-bold: 500;
  --fw-bold: 700;

  --letter-spacing-400: -1.125px;
  --letter-spacing-300: -0.75px;
  --letter-spacing-200: -0.25px;
  --letter-spacing-100: -0.1px; 
  
  --line-height-500: 33px;
  --line-height-400: 24px;
  --line-height-300: 22px;
  --line-height-200: 18px;
  --line-height-100: 15px;

}

@media (width < 45em) {
  :root {
    --fs-400: 1.5rem;
  }

  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 45em) {
  .desktop-hidden {
    display: none;
  }
}

body[data-theme="light"] {
  --clr-primary: var(--vulcan);
  --clr-secondary: var(--bali-hai);

  --clr-body: var(--whisper);
  --clr-neutral-bg: var(--white);

  --text-accent: var(--ship-cove);

  --input-bg-clr: var(--white);
  --input-border-clr: var(--selago);
  --input-label: var(--ship-cove);

  --popover-text: var(--vulcan);
  --popover-shadow: var(--midnight-indigo);
}

body[data-theme="dark"] {
  --clr-primary: var(--white);
  --clr-secondary: var(--selago);
  --text-accent: var(--selago);
  --clr-body: var(--vulcan);

  --clr-neutral-bg: var(--mirage);

  --input-bg-clr: var(--mirage);
  --input-border-clr: var(--ebony-clay);
  --input-label: var(--selago);

  --popover-text: var(--selago);
  --popover-shadow: var(--vulcan);
}

/* CSS Reset by Andy Bell https://andy-bell.co.uk/a-modern-css-reset/ */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

h1, 
h2, 
h3, 
h4, 
h5, 
h6 {
  font-weight: var(--fw-bold);
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body, #root {
  min-height: 100vh;
}

body {
  font-family: var(--ff-primary);
  font-size: var(--fs-100);
  font-weight: var(--fw-semi-bold);
  color: hsl( var(--clr-primary) );
  background-color: hsl( var(--clr-body) );
  letter-spacing: var(--letter-spacing-100);
  line-height: var(--line-height-200);
  text-rendering: optimizeSpeed;  
}

button {
  outline: 0;
  border: 0;
  background-color: transparent;
  cursor: pointer;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

a[class] {
  text-decoration: none;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

/* ------------------- */
/* Utility classes     */
/* ------------------- */

/* general */

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.justify-center {
  justify-content: center;
}

.justify-sb {
  justify-content: space-between;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: end;
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.d-block {
  display: block;
}

.d-inline {
  display: inline;
}

.p-relative {
  position: relative;
}

.container {
  --padding-inline: 5rem;
  width: min(45.625rem, 100% - var(--padding-inline));
  margin-inline: auto;
}

@media (width < 25em) {
  .container {
    --padding-inline: 2rem;
  }
}

.flow > * + * {
  margin-top: var(--flow-spacing, 1rem);
}

/* colors */

.bg-primary { background-color: hsl( var(--clr-primary) ); }
.bg-secondary { background-color: hsl( var(--clr-secondary) ); }
.bg-body { background-color: hsl( var(--bg-body) ); }
.bg-oxford-blue { background-color: hsl( var(--oxford-blue) ); }
.bg-neutral { background-color: hsl( var(--clr-neutral-bg) ); }

.text-primary { color: hsl( var(--clr-primary) ); }
.text-secondary { color: hsl( var(--clr-secondary) ); }
.text-accent { color: hsl( var(--text-accent) ); }
.text-white { color: hsl( var(--white) ); }
.text-oxford-blue { color: hsl( var(--oxford-blue) ); }
.text-cornflower-blue { color: hsl( var(--cornflower-blue) ); }

/* typography */

.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }
.fs-100 { font-size: var(--fs-100); }

.fw-semi-bold { font-weight: var(--fw-semi-bold); }
.fw-bold { font-weight: var(--fw-bold); }

.letter-spacing-400 { letter-spacing: var(--letter-spacing-400); }
.letter-spacing-300 { letter-spacing: var(--letter-spacing-300); }
.letter-spacing-200 { letter-spacing: var(--letter-spacing-200); }
.letter-spacing-100 { letter-spacing: var(--letter-spacing-100); }

.line-height-500 { line-height: var(--line-height-500); }
.line-height-400 { line-height: var(--line-height-400); }
.line-height-300 { line-height: var(--line-height-300); }
.line-height-200 { line-height: var(--line-height-200); }
.line-height-100 { line-height: var(--line-height-100); }

/* ------------------- */
/* Components          */
/* ------------------- */

/* buttons */

body[data-theme='light'] .button {
  --edit-bg-clr: var(--selago);
  --edit-text-clr: var(--ship-cove);
  --edit-hover-bg-clr: var(--whisper);

  --draft-text-clr: var(--bali-hai);
  --draft-hover-bg-clr: var(--vulcan);
}

body[data-theme='dark'] .button {
  --edit-bg-clr: var(--ebony-clay);
  --edit-text-clr: var(--selago);
  --edit-hover-bg-clr: var(--white);

  --draft-text-clr: var(--selago);
  --draft-hover-bg-clr: var(--mirage);
}

.button {
  display: flex;
  gap: 1rem;
  align-items: center;

  font-size: var(--fs-200);
  padding: var(--button-padding, 0.8125rem clamp(1rem, 2vw, 1.5rem));
  
  cursor: pointer;
  border-radius: 100vmax;
  transition: 100ms ease-in;

  --draft-bg-clr: hsl( var(--oxford-blue) );
}

.button div {
  padding: 0.625rem;
  background-color: hsl( var(--white) );
  aspect-ratio: 1;
  border-radius: 100vmax;
}

.button--new-invoice {
  --button-padding: 0.5rem 1.0625rem 0.5rem 0.5rem;
}

.button--new-invoice,
.button--mark {
  color: hsl( var(--white) );
  background-color: hsl( var(--cornflower-blue) );
}

:is(.button--new-invoice, .button--mark):is(:hover, :focus-visible) {
  background-color: hsl( var(--heliotrope) );
}

.button--edit {
  background-color: hsl( var(--edit-bg-clr) );
  color: hsl( var(--edit-text-clr) );
}

.button--edit:is(:hover, :focus-visible) {
  background-color: hsl( var(--edit-hover-bg-clr) );
}

.button--draft {
  background-color: hsl( var(--draft-bg-clr) );
  color: hsl( var(--draft-text-clr) );
}

.button--draft:is(:hover, :focus-visible) {
  background-color: hsl( var(--draft-hover-bg-clr) );
}

.button--delete {
  background-color: hsl( var(--burnt-siena) );
  color: hsl( var(--white) );
}

.button--delete:is(:hover, :focus-visible) {
  background-color: hsl( var(--mona-lisa) );
}

.button--add, .button--discard{
  background-color: hsl( var(--frosty-pearl) );
  color: hsl( var(--bali-hai) );
  display: block;
}

.button--add {
  width: 100%;
}

:is(.button--add, .button--discard):is(:hover, :focus-visible) {
  background-color: hsl( var(--selago) );
}

/* form elements */

.form-element {
  font-size: var(--fs-200);
  font-weight: 700;
  line-height: var(--line-height-100);
  --flow-spacing: 2rem;
}

.form-element .label {
  color: hsl( var(--input-label) );
  font-size: var(--fs-100);
}

.form-element > * + * {
  margin-top: 0.5625rem;
}

.form-element .input {
  padding: 1rem clamp(.5rem, 1vw, 1.5rem);
  border: 1px solid hsl( var(--input-border-clr) );
  outline: 0;
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: hsl( var(--input-bg-clr) );
  color: hsl( var(--text-primary) );
  width: 100%;
}

.form-element--button {
  flex-shrink: 0;
  background-color: hsl( var(--input-bg-clr) );
  display: flex;
  justify-content: space-between;
  align-items: center;
  border: 0;
  outline: none;
  cursor: pointer;
}

.form-element *:focus {
  border-color: hsl( var(--cornflower-blue) );
}

.react-aria-Item {
  font-size: var(--fs-200);
  font-weight: 700;
  padding: .5em 2em .5em 1em;
}

.react-aria-Item:not(:last-child) {
  border-bottom: 1px solid hsl( var(--input-border-clr) );
}

:is(.react-aria-CalendarCell, .react-aria-Item):is([data-hovered], [data-focus-visible]) {
  color: hsl( var(--cornflower-blue) );
  outline: none;
}

.filter-wrapper {
  position: relative;
}

.custom-popover {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translate(-50%);
  z-index: 9999;
  padding: 1em;
}

.react-aria-Popover, 
.custom-popover {
  background-color: hsl( var(--input-bg-clr) );
  box-shadow: 0px 10px 20px hsl( var(--popover-shadow) );
  border-radius: 8px;
  color: hsl( var(--popover-text) );
  min-width: 13rem;
}

.react-aria-Item {
  padding: 1rem;
  cursor: pointer;
}

.react-aria-Dialog {
  padding: 1rem;
  outline: 0;
}

.react-aria-Popover header .form-element--button {
  padding: 0;
}

.react-aria-CalendarGridHeader {
  display: none;
}

.react-aria-CalendarGrid {
  margin-top: 1rem;
  margin-inline: auto;
}

.react-aria-CalendarGrid td:not(:last-child) {
  padding-right: 0.9375rem;
}

.react-aria-CalendarGrid tr:not(:last-child) {
  padding-bottom: 0.9375rem;
}

.react-aria-CalendarCell {  
  cursor: pointer;
  outline: 0;
  font-weight: var(--fw-bold);
}

.react-aria-CheckboxGroup {
  display: flex;
  flex-direction: column;
  gap: 0.571rem;
}
.react-aria-CheckboxGroup [slot=description] {
  font-size: 12px;
}
.react-aria-CheckboxGroup [slot=errorMessage] {
  font-size: 12px;
  color: var(--spectrum-global-color-red-600);
}

.react-aria-Checkbox {
  --label-color: var(--spectrum-alias-text-color);
  --deselected-color: var(--cornflower-blue);
  --deselected-color-pressed: var(--cornflower-blue);
  --selected-color: var(--cornflower-blue);
  --selected-color-pressed: lch(from slateblue calc(l - 10%) c h);
  --checkmark-color: white;
  --invalid-color: var(--spectrum-global-color-static-red-600);
  --invalid-color-pressed: var(--spectrum-global-color-static-red-700);
  display: flex;
  align-items: center;
  gap: 0.571rem;
  font-size: 1.143rem;
  color: hsl( var(--label-color) );
}
.react-aria-Checkbox .checkbox {
  width: .9rem;
  height: .9rem;
  outline: 2px solid white;
  border-radius: 2px;
  background-color: hsl( var(--selago) );
  transition: all 200ms;
  display: flex;
  align-items: center;
  justify-content: center;
}

.react-aria-Checkbox[data-hovered] .checkbox {
  outline-color: hsl( var(--deselected-color) );
}

.react-aria-Checkbox svg {
  width: .7rem;
  height: .7rem;
  fill: none;
  stroke: hsl( var(--checkmark-color) );
  stroke-width: 3px;
  stroke-dasharray: 22px;
  stroke-dashoffset: 66;
  transition: all 200ms;
}
.react-aria-Checkbox[data-pressed] .checkbox {
  outline-color: hsl( var(--deselected-color-pressed) );
}

.react-aria-Checkbox:where([data-selected], [data-indeterminate]) .checkbox {
  outline-color: hsl( var(--selected-color) );
  background: hsl( var(--selected-color) );
}

.react-aria-Checkbox:where([data-selected], [data-indeterminate])[data-pressed] .checkbox {
  outline-color: var(--selected-color-pressed);
  background: var(--selected-color-pressed);
}

.react-aria-Checkbox:where([data-selected], [data-indeterminate]) svg{
  stroke-dashoffset: 44;
}

.react-aria-Checkbox[data-validation-state=invalid] .checkbox {
  outline-color: hsl( var(--invalid-color) );
}

.react-aria-Checkbox[data-validation-state=invalid][data-pressed] .checkbox {
  outline-color: hsl( var(--invalid-color-pressed) );
}

.react-aria-Checkbox[data-validation-state=invalid]:where([data-selected], [data-indeterminate]) .checkbox {
  background: hsl( var(--invalid-color) );
}

.react-aria-Checkbox[data-validation-state=invalid]:where([data-selected], [data-indeterminate])[data-pressed] .checkbox {
  background: hsl( var(--invalid-color-pressed) );
}

.react-aria-Checkbox[data-indeterminate] svg {
  stroke: none;
  fill: hsl( var(--checkmark-color) );
}

.react-aria-Checkbox[data-focus-visible] .checkbox {
  box-shadow: 0 0 0 2px var(--spectrum-alias-background-color-default), 0 0 0 4px hsl( var(--selected-color) );
}

.react-aria-Checkbox[data-disabled] {
  opacity: 0.4;
}

@media (forced-colors: active) {
  .react-aria-Checkbox {
    forced-color-adjust: none;
    --label-color: ButtonText;
    --deselected-color: ButtonBorder;
    --deselected-color-pressed: ButtonBorder;
    --selected-color: Highlight;
    --selected-color-pressed: Highlight;
    --checkmark-color: HighlightText;
    --invalid-color: LinkText;
    --invalid-color-pressed: LinkText;
    --spectrum-alias-background-color-default: Canvas;
  }

 .react-aria-Checkbox[data-disabled] {
    opacity: 1;
    --deselected-color: GrayText;
    --selected-color: GrayText;
    --label-color: GrayText;
 }
}

